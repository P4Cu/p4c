# mandatory export
# TODO: make it depend on variable
export P4C=${HOME}/p4c

# enable bash completition
autoload -Uz compinit && compinit
autoload -Uz bashcompinit && bashcompinit
# source common part
source ${P4C}/etc/commonrc

eval "$(zoxide init zsh)"

if [[ -f "${HOME}/.custom_zshrc" ]]; then
    source "${HOME}/.custom_zshrc"
fi

# --------------------------------------------------------------------------------------------------
# ANTIGEN
source ${P4C}/opt/antigen/antigen.zsh
# Load the oh-my-zsh's library.
antigen use oh-my-zsh
# Bundles
antigen bundle dnf
antigen bundle git
antigen bundle pip
antigen bundle djui/alias-tips
antigen bundle fancy-ctrl-z
antigen bundle colored-man-pages
antigen bundle repo
antigen bundle extract
antigen bundle mollifier/cd-gitroot
antigen bundle P4Cu/cd-reporoot
antigen bundle docker
# Syntax
antigen bundle zsh-users/zsh-syntax-highlighting
# unstable completition
antigen bundle zsh-users/zsh-completions
# completition generator
antigen bundle RobSis/zsh-completion-generator
antigen bundle bil-elmoussaoui/flatpak-zsh-completion
# Theme
antigen theme agnoster
# Tell antigen that you're done
antigen apply
# --------------------------------------------------------------------------------------------------

# 10ms for key sequences (default 40)
KEYTIMEOUT=1

# completions
# rustup completions zsh cargo > ~/.zfunc/_cargo
# rustup completions zsh rustup > ~/.zfunc/_rustup
fpath+=~/.zfunc

# --------------------------------------------------------------------------------------------------
# KEYBINDINGS
# vi mode
bindkey -v
# TODO: for as long as PR is not merged: https://github.com/ohmyzsh/ohmyzsh/pull/11134
bindkey -M viins '^Z' fancy-ctrl-z
bindkey -M vicmd '^Z' fancy-ctrl-z

# make ctrl-n ctrl-p behave exacltly like up/down arrows
bindkey "^P" history-beginning-search-backward
bindkey "^N" history-beginning-search-forward
bindkey '^r' history-incremental-search-backward
# --------------------------------------------------------------------------------------------------

if [ -n "$TMUX" ]; then
    alias clear="command clear && tmux clear-history"
fi


setopt histignorespace
setopt extended_glob
setopt transientrprompt

# ag with fast jumps = tag
# requires prebuild tag binary
export TAG_CMD_FMT_STRING='nvim -c "call cursor({{.LineNumber}}, {{.ColumnNumber}})" "{{.Filename}}"'
if (( $+commands[tag] )); then
  export TAG_SEARCH_PROG=rg
  tag() { command tag "$@"; source ${TAG_ALIAS_FILE:-/tmp/tag_aliases} 2>/dev/null }
fi

# required to properly draw vi-mode
function zle-line-init zle-keymap-select {
    zle reset-prompt
}
zle -N zle-line-init
zle -N zle-keymap-select

# shows if any TaskWarrior tasks are in need of attention
function prompt_taskwarrior {
    if [[ -f $HOME/.taskrc ]]; then
        if [ `task +READY +OVERDUE count` -gt "0" ]  ; then
            printf " ﮊ"
        elif [ `task +READY +DUETODAY count` -gt "0" ]  ; then
            printf " "
        elif [ `task +READY +DUETomorrow count` -gt "0" ]  ; then
            printf " "
        elif [ `task +READY urgency \> 10 count` -gt "0" ]  ; then
            printf " "
        else
            # do nothing
        fi
    fi
}

function prompt_ranger {
    if [[ -v RANGER_LEVEL ]]  ; then
        printf "®️"
    fi
}

## built on agnoster theme
build_custom_prompt() {
  RETVAL=$?
  prompt_ranger
  case $KEYMAP in
      vicmd) prompt_segment yellow default "CMD" ;;
      main|viins) prompt_segment black default "INS" ;;
  esac
  prompt_status
  prompt_taskwarrior
  prompt_virtualenv
  prompt_context
  prompt_dir
  prompt_git
  prompt_bzr
  prompt_hg
  prompt_end
}

PROMPT='%{%f%b%k%}$(build_custom_prompt) '

unalias glog
unalias gbr
alias gbr=gbranch.py
