# mandatory export
# TODO: make it depend on variable
export P4C=${HOME}/p4c
# enable bash completition
autoload bashcompinit
bashcompinit
# source common part
source ${P4C}/etc/commonrc

# --------------------------------------------------------------------------------------------------
# ANTIGEN
source ${P4C}/opt/antigen/antigen.zsh
# Load the oh-my-zsh's library.
antigen use oh-my-zsh
# Bundles
antigen bundle git
antigen bundle pip
antigen bundle Vifon/deer
antigen bundle djui/alias-tips
antigen bundle fancy-ctrl-z
antigen bundle catimg
antigen bundle colored-man-pages
antigen bundle repo
antigen bundle z
antigen bundle extract
antigen bundle mollifier/cd-gitroot
antigen bundle P4Cu/cd-reporoot
# antigen bundle sharat87/zsh-vim-mode
# Syntax
antigen bundle zsh-users/zsh-syntax-highlighting
# reminders
antigen bundle AlexisBRENON/oh-my-zsh-reminder
# unstable completition
antigen bundle zsh-users/zsh-completions
# completition generator
antigen bundle RobSis/zsh-completion-generator
# awesome ls
antigen bundle supercrabtree/k
# Theme
antigen theme agnoster
# Tell antigen that you're done
antigen apply
# --------------------------------------------------------------------------------------------------

# --------------------------------------------------------------------------------------------------
# additional completitions
fpath=(~/workspace $fpath)
autoload -U compinit && compinit
# --------------------------------------------------------------------------------------------------

# 10ms for key sequences (default 40)
KEYTIMEOUT=1

# --------------------------------------------------------------------------------------------------
# KEYBINDINGS
# vi mode
bindkey -v

# deer
autoload -U deer
zle -N deer
bindkey '\ek' deer

# make ctrl-n ctrl-p behave exacltly like up/down arrows
# bindkey "^P" up-line-or-search
# bindkey "^N" down-line-or-search
bindkey "^P" history-beginning-search-backward
bindkey "^N" history-beginning-search-forward
# history-beginning-search-backward
#
# allow ctrl-a and ctrl-e to move to beginning/end of line
bindkey '^a' beginning-of-line
bindkey '^e' end-of-line
bindkey '^r' history-incremental-search-backward
# --------------------------------------------------------------------------------------------------

alias http="python3 -m http.server"

if [ -n "$TMUX" ]; then
    alias clear="command clear && tmux clear"
fi


setopt histignorespace
setopt extended_glob
setopt transientrprompt

# ag with fast jumps = tag
# requires prebuild tag binary
if (( $+commands[tag] )); then
  tag() { command tag "$@"; source ${TAG_ALIAS_FILE:-/tmp/tag_aliases} 2>/dev/null }
fi

vim_ins_mode="%{$FG[045]%}%{$FG[000]$BG[045]%} INSERT %{$reset_color%}"
vim_cmd_mode="%{$fg[green]%}%{$FG[000]$bg[green]%} COMMAND %{$reset_color%}"
# vim_ins_mode="%{$fg[blue]%}%{$fg_bold[black]$bg[blue]%} INSERT %{$reset_color%}"
# vim_cmd_mode="%{$fg[green]%}%{$fg_bold[black]$bg[green]%} COMMAND %{$reset_color%}"
vim_mode=$vim_ins_mode
function zle-line-init zle-keymap-select {
    RPS1="${${KEYMAP/vicmd/${vim_cmd_mode}}/(main|viins)/${vim_ins_mode}}"
    RPS2=$RPS1
    zle reset-prompt

# cursor did not work so far
#   case $KEYMAP in
#     vicmd) print -rn -- $terminfo[cvvis];; # block cursor
#     viins|main) print -rn -- $terminfo[cnorm];; # less visible cursor
#   esac
}
zle -N zle-line-init
zle -N zle-keymap-select
